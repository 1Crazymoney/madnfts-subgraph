// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProxyChange extends ethereum.Event {
  get params(): ProxyChange__Params {
    return new ProxyChange__Params(this);
  }
}

export class ProxyChange__Params {
  _event: ProxyChange;

  constructor(event: ProxyChange) {
    this._event = event;
  }

  get assetType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get asset(): TransferAssetStruct {
    return changetype<TransferAssetStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get transferDirection(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get transferType(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class TransferAssetStruct extends ethereum.Tuple {
  get assetType(): TransferAssetAssetTypeStruct {
    return changetype<TransferAssetAssetTypeStruct>(this[0].toTuple());
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class TransferAssetAssetTypeStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class TransferExecutor extends ethereum.SmartContract {
  static bind(address: Address): TransferExecutor {
    return new TransferExecutor("TransferExecutor", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class SetTransferProxyCall extends ethereum.Call {
  get inputs(): SetTransferProxyCall__Inputs {
    return new SetTransferProxyCall__Inputs(this);
  }

  get outputs(): SetTransferProxyCall__Outputs {
    return new SetTransferProxyCall__Outputs(this);
  }
}

export class SetTransferProxyCall__Inputs {
  _call: SetTransferProxyCall;

  constructor(call: SetTransferProxyCall) {
    this._call = call;
  }

  get assetType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get proxy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetTransferProxyCall__Outputs {
  _call: SetTransferProxyCall;

  constructor(call: SetTransferProxyCall) {
    this._call = call;
  }
}
